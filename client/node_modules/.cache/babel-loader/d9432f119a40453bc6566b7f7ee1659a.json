{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/ProductList.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n}\n\nvar images = importAll(require.context('../Images', false, /\\.(png|jpe?g|svg)$/));\n\nclass ProductList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Products: [],\n      \"abc\": \"ac\"\n    };\n  }\n\n  componentDidMount() {\n    //   axios.get('/Products')\n    fetch('/Products').then(res => res.json()).then(res2 => {\n      console.log(res2);\n      this.setState({\n        Products: res2\n      });\n    });\n  }\n\n  handleClick(e, _id) {\n    console.log(_id);\n    console.log(this.props.id); //     const formData = new FormData()\n    //     formData.append(\"name\",\"vatsal\");\n    //   //  formData.append('id', this.props.id);\n    //     console.log(\"..\")\n    //     axios.post('/appenduser',formData)\n    //     .then((res)=>console.log(res))\n    //     .catch((err)=>console.log(err))\n    //     for (var key of formData.entries()) {\n    //         console.log(key[0] + ', ' + key[1]);\n    //     }\n\n    obj = {\n      \"name\": \"abc\"\n    };\n    fetch('/appenduser', {\n      method: 'POST',\n      // We convert the React state to JSON and send it as the POST body\n      body: JSON.stringify(obj)\n    }).then(function (response) {\n      console.log(response);\n      return response.json();\n    });\n  }\n\n  render() {\n    const list = this.state.Products.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-6\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[item.image1].default,\n          alt: \"aa\",\n          height: 150,\n          width: 150\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.brand\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Bidding date \", item.bidDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.image1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          name: \"a\",\n          onClick: e => this.handleClick(e, item._id),\n          children: \"Interested\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 20\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: list\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  id: state.id\n});\n\nexport default connect(mapStateToProps)(ProductList);","map":{"version":3,"sources":["/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/ProductList.js"],"names":["React","Component","connect","axios","importAll","r","images","keys","map","item","index","replace","require","context","ProductList","constructor","props","state","Products","componentDidMount","fetch","then","res","json","res2","console","log","setState","handleClick","e","_id","id","obj","method","body","JSON","stringify","response","render","list","image1","default","name","brand","bidDate","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios';\n\n\nfunction importAll(r) {\n    let images = {};\n    r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n    return images;\n  }\n\n  var images = importAll(require.context('../Images', false, /\\.(png|jpe?g|svg)$/));  \n\n\nclass ProductList extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            \n            Products : [],\n            \"abc\" : \"ac\"\n\n        }\n    }        \n    \n     componentDidMount(){\n        //   axios.get('/Products')\n          fetch('/Products')\n         .then(res => res.json())\n         .then(res2 => {console.log(res2)\n            this.setState({\n                Products : res2\n            })  \n        })\n    \n    \n         \n         \n        \n     }\n\n     handleClick (e,_id){\n        \n        console.log(_id)\n        console.log(this.props.id)\n\n    //     const formData = new FormData()\n\n    //     formData.append(\"name\",\"vatsal\");\n    //   //  formData.append('id', this.props.id);\n    //     console.log(\"..\")\n\n    //     axios.post('/appenduser',formData)\n    //     .then((res)=>console.log(res))\n    //     .catch((err)=>console.log(err))\n\n    //     for (var key of formData.entries()) {\n    //         console.log(key[0] + ', ' + key[1]);\n    //     }\n\n    obj = {\n        \"name\" : \"abc\"\n    }\n\n    fetch('/appenduser', {\n        method: 'POST',\n        // We convert the React state to JSON and send it as the POST body\n        body: JSON.stringify(obj)\n      }).then(function(response) {\n        console.log(response)\n        return response.json();\n      });\n\n     }\n    \n      \n      \n      \n    \n     \n    render() {\n        \n        const list = this.state.Products.map(item => {\n            return <div className=\"col-6\" >\n                \n                <img src={images[item.image1].default} alt=\"aa\" height={150} width={150}/>\n\n                <p>{item.name}</p>\n                <p>{item.brand}</p>\n                <p>Bidding date {item.bidDate}</p>\n                <p>{item.image1}</p>\n                <button type=\"button\" name=\"a\" onClick={(e)=>this.handleClick(e,item._id)}  >Interested</button>\n\n                {/* <img src={require(item.image1).default} alt=\"abcs\" />  */}\n                {/* <img src={require(`${item.image1}`).default} alt=\"abc\" /> */}\n                \n            </div>\n        })\n        \n        return (\n            \n            <div className=\"container\">\n                <div className=\"row\">\n                {list}\n                </div>\n\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    id : state.id\n})\nexport default connect(mapStateToProps)(ProductList);\n"]},"metadata":{},"sourceType":"module"}