{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Timer.js\";\nimport React, { Component } from 'react';\nimport Countdown from 'react-countdown';\nimport App from '../App';\n\nfunction TimeOver() {\n  //  return <App />\n  return \"Time Over\";\n}\n\n_c = TimeOver;\n\nfunction getSecondsToTomorrow() {\n  let now = new Date(); // tomorrow date\n\n  let tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 1);\n  let diff = tomorrow - now; // difference in ms\n\n  return Math.round(diff / 1000); // convert to seconds\n}\n\nclass Timer extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: /*#__PURE__*/_jsxDEV(Countdown, {\n          date: Date.now() + getSecondsToTomorrow,\n          children: /*#__PURE__*/_jsxDEV(TimeOver, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default Timer;\n\nvar _c;\n\n$RefreshReg$(_c, \"TimeOver\");","map":{"version":3,"sources":["/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Timer.js"],"names":["React","Component","Countdown","App","TimeOver","getSecondsToTomorrow","now","Date","tomorrow","getFullYear","getMonth","getDate","diff","Math","round","Timer","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,GAAP,MAAgB,QAAhB;;AAEA,SAASC,QAAT,GAAmB;AACjB;AACI,SAAO,WAAP;AACL;;KAHQA,Q;;AAKT,SAASC,oBAAT,GAAgC;AAC5B,MAAIC,GAAG,GAAG,IAAIC,IAAJ,EAAV,CAD4B,CAG5B;;AACA,MAAIC,QAAQ,GAAG,IAAID,IAAJ,CAASD,GAAG,CAACG,WAAJ,EAAT,EAA4BH,GAAG,CAACI,QAAJ,EAA5B,EAA4CJ,GAAG,CAACK,OAAJ,KAAc,CAA1D,CAAf;AAEA,MAAIC,IAAI,GAAGJ,QAAQ,GAAGF,GAAtB,CAN4B,CAMD;;AAC3B,SAAOO,IAAI,CAACC,KAAL,CAAWF,IAAI,GAAG,IAAlB,CAAP,CAP4B,CAOI;AACjC;;AAEH,MAAMG,KAAN,SAAoBd,SAApB,CAA6B;AAEzBe,EAAAA,MAAM,GACL;AACG,wBAAQ;AAAA,6BACJ;AAAA,+BACI,QAAC,SAAD;AAAW,UAAA,IAAI,EAAET,IAAI,CAACD,GAAL,KAAaD,oBAA9B;AAAA,iCACA,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,YAAR;AASH;;AAbwB;;AAiB7B,eAAeU,KAAf","sourcesContent":["import React, { Component } from 'react'\nimport Countdown from 'react-countdown'\nimport App from '../App'\n\nfunction TimeOver(){\n  //  return <App />\n      return \"Time Over\"\n}\n\nfunction getSecondsToTomorrow() {\n    let now = new Date();\n  \n    // tomorrow date\n    let tomorrow = new Date(now.getFullYear(), now.getMonth(), now.getDate()+1);\n  \n    let diff = tomorrow - now; // difference in ms\n    return Math.round(diff / 1000); // convert to seconds\n  }\n  \nclass Timer extends Component{\n    \n    render()\n     {\n        return (<div>\n            <h1>\n                <Countdown date={Date.now() + getSecondsToTomorrow}>\n                <TimeOver />\n                </Countdown>\n                \n            </h1>\n        </div>)\n\n    }\n}\n\n\nexport default Timer;"]},"metadata":{},"sourceType":"module"}