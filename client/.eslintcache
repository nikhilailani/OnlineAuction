[{"/home/krunal/Desktop/nodejs-express-mongodb/client/src/index.js":"1","/home/krunal/Desktop/nodejs-express-mongodb/client/src/App.js":"2","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Navbar.js":"3","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/About.js":"4","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Home.js":"5","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Login.js":"6","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Timer.js":"7","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/UploadImages.js":"8","/home/krunal/Desktop/nodejs-express-mongodb/client/src/common/UserReducer.js":"9","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Demo.js":"10","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/UploadProduct.js":"11","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/ProductList.js":"12","/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Active-bids.js":"13"},{"size":1755,"mtime":1614505933765,"results":"14","hashOfConfig":"15"},{"size":691,"mtime":1612861902724,"results":"16","hashOfConfig":"15"},{"size":512,"mtime":1611929462085,"results":"17","hashOfConfig":"15"},{"size":129,"mtime":1612243327735,"results":"18","hashOfConfig":"15"},{"size":1484,"mtime":1611900380402,"results":"19","hashOfConfig":"15"},{"size":899,"mtime":1611929931636,"results":"20","hashOfConfig":"15"},{"size":816,"mtime":1614521727810,"results":"21","hashOfConfig":"15"},{"size":1580,"mtime":1612936150842,"results":"22","hashOfConfig":"15"},{"size":469,"mtime":1614435667129,"results":"23","hashOfConfig":"15"},{"size":896,"mtime":1613890832639,"results":"24","hashOfConfig":"15"},{"size":2833,"mtime":1613988704730,"results":"25","hashOfConfig":"15"},{"size":2855,"mtime":1614435197100,"results":"26","hashOfConfig":"15"},{"size":1779,"mtime":1614509559802,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"wcgxne",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},"/home/krunal/Desktop/nodejs-express-mongodb/client/src/index.js",[],["60","61"],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/App.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Navbar.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/About.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Home.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Login.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Timer.js",["62"],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/UploadImages.js",["63"],"import React, { Component } from 'react'\nimport axios from 'axios';\nimport photooo from '../Images/a.png'\n\nclass UploadImages extends Component {\n\n      state ={\n        name: '',\n        photo: \"\"\n      }\n\n\n   \n\n      _handleSubmit(e) {\n        e.preventDefault();\n        console.log(\"SSSSSSS\")\n        console.log(this.state.photo)\n\n        const formData = new FormData();\n        // TODO: do something with -> this.state.file\n        formData.append('photo', this.state.photo);\n        formData.append('name', this.state.name);\n        console.log(\"..\")\n\n        axios.post('/upload',formData)\n        .then((res)=>console.log(res))\n        .catch((err)=>console.log(err))\n      }\n    \n      _handleImageChange(e) {\n        e.preventDefault();\n        console.log(this.state.photo)\n        this.setState({\n          photo : e.target.files[0]\n        })\n        console.log(\"++++\")\n        \n        console.log(\"****\")\n        console.log(String(e.target.files[0]))\n    \n      }\n    \n      render() {\n        \n        return (\n          <div className=\"container\">\n            <form onSubmit={(e)=>this._handleSubmit(e)} encType=\"multipart/form-data\">\n              <input \n                type=\"file\" name=\"photo\" \n                onChange={(e)=>this._handleImageChange(e)} />\n              <button \n                type=\"submit\" \n                >Upload Image</button>\n            </form>\n             <div className=\"imgPreview\">\n             \n         \n            <img src={photooo} />\n            </div>\n          </div>\n        )\n      }\n}\n\nexport default UploadImages;",["64","65"],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/common/UserReducer.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Demo.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/UploadProduct.js",[],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/ProductList.js",["66","67"],"import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport axios from 'axios';\n\n\nfunction importAll(r) {\n    let images = {};\n    r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n    return images;\n  }\n\n  var images = importAll(require.context('../Images', false, /\\.(png|jpe?g|svg)$/));  \n\n\nclass ProductList extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n            \n            Products : [],\n            \"abc\" : \"ac\"\n\n        }\n    }        \n    \n     componentDidMount(){\n        //   axios.get('/Products')\n          fetch('/Products')\n         .then(res => res.json())\n         .then(res2 => {console.log(res2)\n            this.setState({\n                Products : res2\n            })  \n        })\n    \n    \n         \n         \n        \n     }\n\n     handleClick (e,_id){\n        \n        console.log(_id)\n        console.log(this.props.id)\n\n    //     const formData = new FormData()\n\n    //     formData.append(\"name\",\"vatsal\");\n    //   //  formData.append('id', this.props.id);\n    //     console.log(\"..\")\n\n    //     axios.post('/appenduser',formData)\n    //     .then((res)=>console.log(res))\n    //     .catch((err)=>console.log(err))\n\n    //     for (var key of formData.entries()) {\n    //         console.log(key[0] + ', ' + key[1]);\n    //     }\n\n    var data = new URLSearchParams();\n    data.append(\"_id\",_id)\n    data.append(\"id\",this.props.id)\n    data.append(\"email\",this.props.email)\n    console.log(\"1111111\")\n    console.log(this.props.email)\n\n    fetch('/appenduser',{\n        method : \"post\",\n        body : data,\n    }).then(res => res.json())\n    .then(res2 => console.log(res2));\n    console.log(\"done\")\n    \n}\n    \n      \n      \n      \n    \n     \n    render() {\n        \n        const list = this.state.Products.map(item => {\n            return <div className=\"col-6\" >\n                \n                <img src={images[item.image1].default} alt=\"aa\" height={150} width={150}/>\n\n                <p>{item.name}</p>\n                <p>{item.brand}</p>\n                <p>Bidding date {item.bidDate}</p>\n                <p>{item.image1}</p>\n                <button type=\"button\" name=\"a\" onClick={(e)=>this.handleClick(e,item._id)}  >Interested</button>\n\n                {/* <img src={require(item.image1).default} alt=\"abcs\" />  */}\n                {/* <img src={require(`${item.image1}`).default} alt=\"abc\" /> */}\n                \n            </div>\n        })\n        \n        return (\n            \n            <div className=\"container\">\n                <div className=\"row\">\n                {list}\n                </div>\n\n                \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    id : state.id,\n    email : state.email\n})\nexport default connect(mapStateToProps)(ProductList);\n",["68","69"],"/home/krunal/Desktop/nodejs-express-mongodb/client/src/components/Active-bids.js",["70"],"import React, { Component } from 'react'\nimport Timer from './Timer'\n\n\nfunction importAll(r) {\n    let images = {};\n    r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n    return images;\n  }\n\n  var images = importAll(require.context('../Images', false, /\\.(png|jpe?g|svg)$/));  \n\n\nclass ActiveBids extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n\n            products : []\n             \n        }\n    }\n\n    componentDidMount(){\n\n        fetch('/active-bids')\n        .then( res => res.json() )\n        .then( res2 => {\n            console.log(res2)\n            this.setState({\n                products : res2\n            })\n        })\n    }\n\n    handleClick(e,_id) {\n        console.log(\"Okay\")\n    }\n    \n    render() {\n        \n        const list = this.state.products.map(item => {\n            return <div className=\"col-6\" >\n                \n                <img src={images[item.image1].default} alt=\"aa\" height={150} width={150}/>\n\n                <p>{item.name}</p>\n                <p>{item.brand}</p>\n                <p>Bidding date {item.bidDate}</p>\n                <p>{item.image1}</p>\n                <p>Ends In <Timer /></p>\n                <button type=\"button\" name=\"a\" onClick={(e)=>this.handleClick(e,item._id)}  >Bid Now</button>\n\n                {/* <img src={require(item.image1).default} alt=\"abcs\" />  */}\n                {/* <img src={require(`${item.image1}`).default} alt=\"abc\" /> */}\n                \n            </div>\n        })\n        \n        return (\n            \n            <div className=\"container\">\n                <div className=\"row\">\n                {list}\n                </div>\n\n                \n            </div>\n        )\n    }\n}\n\nexport default ActiveBids\n",{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":11},{"ruleId":"79","severity":1,"message":"80","line":59,"column":13,"nodeType":"81","endLine":59,"endColumn":34},{"ruleId":"71","replacedBy":"82"},{"ruleId":"73","replacedBy":"83"},{"ruleId":"75","severity":1,"message":"84","line":3,"column":8,"nodeType":"77","messageId":"78","endLine":3,"endColumn":13},{"ruleId":"85","severity":1,"message":"86","line":8,"column":32,"nodeType":"87","messageId":"88","endLine":8,"endColumn":34},{"ruleId":"71","replacedBy":"89"},{"ruleId":"73","replacedBy":"90"},{"ruleId":"85","severity":1,"message":"86","line":7,"column":32,"nodeType":"87","messageId":"88","endLine":7,"endColumn":34},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-unused-vars","'App' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["91"],["92"],"'axios' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["91"],["92"],"no-global-assign","no-unsafe-negation"]